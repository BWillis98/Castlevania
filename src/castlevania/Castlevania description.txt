The game will have the main Frame with everything being drawn on it. 
The frame will consist of levels being loaded once each level is completed by some certain standard. 
The standard will most likely be a boss the player has to fight, then the next level will load. 
The enemies will be of different types and most likely needing to fly around and walk around. 
There will be platforms throughout the levels so there will need to be edge detection implemented somehow in the 
game for the player. The player needs to have a health bar, and so do enemies. 
Bosses will actually have their own health bar, and there needs to be some GUI at the top of the screen indicating
the player’s health, etc. That can be it’s own separate class.

Classes:
CastlevaniaRunner – Runs the game, start() method
Game – Instantiates the Frame, runs the game, calculates and repaints stuff, etc.
Player – Keeps track of the main player, the one the user controls.
Item – Abstract class, just an item. Any item in the game, this includes weapons, projectiles, health, etc.
Entity – The above all, ANYTHING in the game that interacts with anything. Items, the player, enemies, bosses, etc.
Enemy – A basic enemy, abstract.

/*Other enemies list*/
Boss – Extends the enemy class. A boss with a life bar.
SpriteSheet – Class that will load any sheet for sprites and entities for the game.
Level – Class that will load in levels for the game.